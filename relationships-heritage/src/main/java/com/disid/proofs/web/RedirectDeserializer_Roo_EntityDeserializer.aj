// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package com.disid.proofs.web;

import com.disid.proofs.domain.Redirect;
import com.disid.proofs.service.api.RedirectService;
import com.disid.proofs.web.RedirectDeserializer;
import com.fasterxml.jackson.core.JsonParser;
import com.fasterxml.jackson.core.ObjectCodec;
import com.fasterxml.jackson.databind.DeserializationContext;
import com.fasterxml.jackson.databind.JsonNode;
import io.springlets.web.NotFoundException;
import java.io.IOException;
import org.springframework.boot.jackson.JsonComponent;
import org.springframework.core.convert.ConversionService;

privileged aspect RedirectDeserializer_Roo_EntityDeserializer {
    
    declare @type: RedirectDeserializer: @JsonComponent;
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @return RedirectService
     */
    public RedirectService RedirectDeserializer.getRedirectService() {
        return redirectService;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param redirectService
     */
    public void RedirectDeserializer.setRedirectService(RedirectService redirectService) {
        this.redirectService = redirectService;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @return ConversionService
     */
    public ConversionService RedirectDeserializer.getConversionService() {
        return conversionService;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param conversionService
     */
    public void RedirectDeserializer.setConversionService(ConversionService conversionService) {
        this.conversionService = conversionService;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param jsonParser
     * @param context
     * @param codec
     * @param tree
     * @return Redirect
     * @throws IOException
     */
    public Redirect RedirectDeserializer.deserializeObject(JsonParser jsonParser, DeserializationContext context, ObjectCodec codec, JsonNode tree) throws IOException {
        String idText = tree.asText();
        Long id = conversionService.convert(idText, Long.class);
        Redirect redirect = redirectService.findOne(id);
        if (redirect == null) {
            throw new NotFoundException("Redirect not found");
        }
        return redirect;
    }
    
}
