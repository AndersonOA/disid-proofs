// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package com.disid.proofs.service.api;

import com.disid.proofs.domain.Redirect;
import com.disid.proofs.service.api.RedirectService;
import io.springlets.data.domain.GlobalSearch;
import io.springlets.format.EntityResolver;
import java.util.List;
import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;

privileged aspect RedirectService_Roo_Service {
    
    declare parents: RedirectService extends EntityResolver<Redirect, Long>;
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param id
     * @return Redirect
     */
    public abstract Redirect RedirectService.findOne(Long id);
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param redirect
     */
    public abstract void RedirectService.delete(Redirect redirect);
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param entities
     * @return List
     */
    public abstract List<Redirect> RedirectService.save(Iterable<Redirect> entities);
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param ids
     */
    public abstract void RedirectService.delete(Iterable<Long> ids);
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param entity
     * @return Redirect
     */
    public abstract Redirect RedirectService.save(Redirect entity);
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param id
     * @return Redirect
     */
    public abstract Redirect RedirectService.findOneForUpdate(Long id);
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param ids
     * @return List
     */
    public abstract List<Redirect> RedirectService.findAll(Iterable<Long> ids);
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @return List
     */
    public abstract List<Redirect> RedirectService.findAll();
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @return Long
     */
    public abstract long RedirectService.count();
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param globalSearch
     * @param pageable
     * @return Page
     */
    public abstract Page<Redirect> RedirectService.findAll(GlobalSearch globalSearch, Pageable pageable);
    
}
