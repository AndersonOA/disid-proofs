// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package org.disid.proof.web;

import io.springlets.data.domain.GlobalSearch;
import io.springlets.data.web.datatables.ConvertedDatatablesData;
import io.springlets.data.web.datatables.Datatables;
import io.springlets.data.web.datatables.DatatablesColumns;
import io.springlets.data.web.datatables.DatatablesPageable;
import io.springlets.web.NotFoundException;
import io.springlets.web.mvc.util.ControllerMethodLinkBuilderFactory;
import io.springlets.web.mvc.util.MethodLinkBuilderFactory;
import java.util.Collection;
import java.util.Collections;
import java.util.Locale;
import org.disid.proof.domain.Book;
import org.disid.proof.domain.Editorial;
import org.disid.proof.service.api.BookService;
import org.disid.proof.service.api.EditorialService;
import org.disid.proof.web.EditorialsCollectionThymeleafController;
import org.disid.proof.web.EditorialsItemBooksThymeleafController;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.context.MessageSource;
import org.springframework.context.i18n.LocaleContextHolder;
import org.springframework.core.convert.ConversionService;
import org.springframework.data.domain.Page;
import org.springframework.http.HttpMethod;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.servlet.ModelAndView;

privileged aspect EditorialsItemBooksThymeleafController_Roo_Thymeleaf {
    
    declare @type: EditorialsItemBooksThymeleafController: @Controller;
    
    declare @type: EditorialsItemBooksThymeleafController: @RequestMapping(value = "/editorials/{editorial}/books", name = "EditorialsItemBooksThymeleafController", produces = MediaType.TEXT_HTML_VALUE);
    
    /**
     * TODO Auto-generated attribute documentation
     * 
     */
    private MessageSource EditorialsItemBooksThymeleafController.messageSource;
    
    /**
     * TODO Auto-generated attribute documentation
     * 
     */
    private MethodLinkBuilderFactory<EditorialsCollectionThymeleafController> EditorialsItemBooksThymeleafController.collectionLink;
    
    /**
     * TODO Auto-generated attribute documentation
     * 
     */
    private ConversionService EditorialsItemBooksThymeleafController.conversionService;
    
    /**
     * TODO Auto-generated constructor documentation
     * 
     * @param editorialService
     * @param bookService
     * @param conversionService
     * @param messageSource
     * @param linkBuilder
     */
    @Autowired
    public EditorialsItemBooksThymeleafController.new(EditorialService editorialService, BookService bookService, ConversionService conversionService, MessageSource messageSource, ControllerMethodLinkBuilderFactory linkBuilder) {
        setEditorialService(editorialService);
        setBookService(bookService);
        setConversionService(conversionService);
        setMessageSource(messageSource);
        setCollectionLink(linkBuilder.of(EditorialsCollectionThymeleafController.class));
    }

    /**
     * TODO Auto-generated method documentation
     * 
     * @return MessageSource
     */
    public MessageSource EditorialsItemBooksThymeleafController.getMessageSource() {
        return messageSource;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param messageSource
     */
    public void EditorialsItemBooksThymeleafController.setMessageSource(MessageSource messageSource) {
        this.messageSource = messageSource;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @return MethodLinkBuilderFactory
     */
    public MethodLinkBuilderFactory<EditorialsCollectionThymeleafController> EditorialsItemBooksThymeleafController.getCollectionLink() {
        return collectionLink;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param collectionLink
     */
    public void EditorialsItemBooksThymeleafController.setCollectionLink(MethodLinkBuilderFactory<EditorialsCollectionThymeleafController> collectionLink) {
        this.collectionLink = collectionLink;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @return ConversionService
     */
    public ConversionService EditorialsItemBooksThymeleafController.getConversionService() {
        return conversionService;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param conversionService
     */
    public void EditorialsItemBooksThymeleafController.setConversionService(ConversionService conversionService) {
        this.conversionService = conversionService;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param id
     * @param locale
     * @param method
     * @return Editorial
     */
    @ModelAttribute
    public Editorial EditorialsItemBooksThymeleafController.getEditorial(@PathVariable("editorial") Long id, Locale locale, HttpMethod method) {
        Editorial editorial = null;
        if (HttpMethod.PUT.equals(method)) {
            editorial = editorialService.findOneForUpdate(id);
        } else {
            editorial = editorialService.findOne(id);
        }
        
        if (editorial == null) {
            String message = messageSource.getMessage("error_NotFound", new Object[] {"Editorial", id}, "The record couldn't be found", locale);
            throw new NotFoundException(message);
        }
        return editorial;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param model
     */
    public void EditorialsItemBooksThymeleafController.populateFormats(Model model) {
        model.addAttribute("application_locale", LocaleContextHolder.getLocale().getLanguage());
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param model
     */
    public void EditorialsItemBooksThymeleafController.populateForm(Model model) {
        populateFormats(model);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param editorial
     * @param datatablesColumns
     * @param search
     * @param pageable
     * @param draw
     * @return ResponseEntity
     */
    @GetMapping(name = "datatables", produces = Datatables.MEDIA_TYPE, value = "/dt")
    @ResponseBody
    public ResponseEntity<ConvertedDatatablesData<Book>> EditorialsItemBooksThymeleafController.datatables(@ModelAttribute Editorial editorial, DatatablesColumns datatablesColumns, GlobalSearch search, DatatablesPageable pageable, @RequestParam("draw") Integer draw) {
        
        Page<Book> books = getBookService().findByEditorial(editorial, search, pageable);
        long totalBooksCount = getBookService().countByEditorial(editorial);
        ConvertedDatatablesData<Book> data =  new ConvertedDatatablesData<Book>(books, totalBooksCount, draw, getConversionService(), datatablesColumns);
        return ResponseEntity.ok(data);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param editorial
     * @param model
     * @return ModelAndView
     */
    @GetMapping(value = "/create-form", name = "createForm")
    public ModelAndView EditorialsItemBooksThymeleafController.createForm(@ModelAttribute Editorial editorial, Model model) {
        populateForm(model);
        model.addAttribute(new Book());
        return new ModelAndView("editorials/books/create");
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param editorial
     * @param booksToRemove
     * @return ResponseEntity
     */
    @DeleteMapping(name = "removeFromBooks", value = "/{booksToRemove}")
    @ResponseBody
    public ResponseEntity<?> EditorialsItemBooksThymeleafController.removeFromBooks(@ModelAttribute Editorial editorial, @PathVariable("booksToRemove") Long booksToRemove) {
        getEditorialService().removeFromBooks(editorial,Collections.singleton(booksToRemove));
        return ResponseEntity.ok().build();
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param editorial
     * @param booksToRemove
     * @return ResponseEntity
     */
    @DeleteMapping(name = "removeFromBooksBatch", value = "/batch/{booksToRemove}")
    @ResponseBody
    public ResponseEntity<?> EditorialsItemBooksThymeleafController.removeFromBooksBatch(@ModelAttribute Editorial editorial, @PathVariable("booksToRemove") Collection<Long> booksToRemove) {
        getEditorialService().removeFromBooks(editorial, booksToRemove);
        return ResponseEntity.ok().build();
    }
    
}
