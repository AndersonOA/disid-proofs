// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package org.disid.proof.service.impl;

import io.springlets.data.domain.GlobalSearch;
import java.util.List;
import org.disid.proof.domain.Cover;
import org.disid.proof.repository.CoverRepository;
import org.disid.proof.service.impl.CoverServiceImpl;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

privileged aspect CoverServiceImpl_Roo_Service_Impl {
    
    declare @type: CoverServiceImpl: @Service;
    
    declare @type: CoverServiceImpl: @Transactional(readOnly = true);
    
    /**
     * TODO Auto-generated attribute documentation
     * 
     */
    private CoverRepository CoverServiceImpl.coverRepository;
    
    /**
     * TODO Auto-generated constructor documentation
     * 
     * @param coverRepository
     */
    @Autowired
    public CoverServiceImpl.new(CoverRepository coverRepository) {
        setCoverRepository(coverRepository);
    }

    /**
     * TODO Auto-generated method documentation
     * 
     * @return CoverRepository
     */
    public CoverRepository CoverServiceImpl.getCoverRepository() {
        return coverRepository;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param coverRepository
     */
    public void CoverServiceImpl.setCoverRepository(CoverRepository coverRepository) {
        this.coverRepository = coverRepository;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param cover
     */
    @Transactional
    public void CoverServiceImpl.delete(Cover cover) {
        // Clear bidirectional one-to-one parent relationship with Book
        cover.removeFromBook();
        
        getCoverRepository().delete(cover);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param entities
     * @return List
     */
    @Transactional
    public List<Cover> CoverServiceImpl.save(Iterable<Cover> entities) {
        return getCoverRepository().save(entities);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param ids
     */
    @Transactional
    public void CoverServiceImpl.delete(Iterable<Long> ids) {
        List<Cover> toDelete = getCoverRepository().findAll(ids);
        getCoverRepository().deleteInBatch(toDelete);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param entity
     * @return Cover
     */
    @Transactional
    public Cover CoverServiceImpl.save(Cover entity) {
        
        // Ensure the relationships are maintained
        entity.addToBook(entity.getBook());
        
        return getCoverRepository().save(entity);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param id
     * @return Cover
     */
    public Cover CoverServiceImpl.findOne(Long id) {
        return getCoverRepository().findOne(id);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param id
     * @return Cover
     */
    public Cover CoverServiceImpl.findOneForUpdate(Long id) {
        return getCoverRepository().findOneDetached(id);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param ids
     * @return List
     */
    public List<Cover> CoverServiceImpl.findAll(Iterable<Long> ids) {
        return getCoverRepository().findAll(ids);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @return List
     */
    public List<Cover> CoverServiceImpl.findAll() {
        return getCoverRepository().findAll();
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @return Long
     */
    public long CoverServiceImpl.count() {
        return getCoverRepository().count();
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param globalSearch
     * @param pageable
     * @return Page
     */
    public Page<Cover> CoverServiceImpl.findAll(GlobalSearch globalSearch, Pageable pageable) {
        return getCoverRepository().findAll(globalSearch, pageable);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @return Class
     */
    public Class<Cover> CoverServiceImpl.getEntityType() {
        return Cover.class;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @return Class
     */
    public Class<Long> CoverServiceImpl.getIdType() {
        return Long.class;
    }
    
}
