// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package org.disid.proof.service.impl;

import io.springlets.data.domain.GlobalSearch;
import java.util.HashSet;
import java.util.Iterator;
import java.util.List;
import java.util.Set;
import org.disid.proof.domain.Book;
import org.disid.proof.domain.Editorial;
import org.disid.proof.repository.EditorialRepository;
import org.disid.proof.service.api.BookService;
import org.disid.proof.service.impl.EditorialServiceImpl;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.context.annotation.Lazy;
import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

privileged aspect EditorialServiceImpl_Roo_Service_Impl {
    
    declare @type: EditorialServiceImpl: @Service;
    
    declare @type: EditorialServiceImpl: @Transactional(readOnly = true);
    
    /**
     * TODO Auto-generated attribute documentation
     * 
     */
    private EditorialRepository EditorialServiceImpl.editorialRepository;
    
    /**
     * TODO Auto-generated attribute documentation
     * 
     */
    private BookService EditorialServiceImpl.bookService;
    
    /**
     * TODO Auto-generated constructor documentation
     * 
     * @param editorialRepository
     * @param bookService
     */
    @Autowired
    public EditorialServiceImpl.new(EditorialRepository editorialRepository, @Lazy BookService bookService) {
        setEditorialRepository(editorialRepository);
        setBookService(bookService);
    }

    /**
     * TODO Auto-generated method documentation
     * 
     * @return EditorialRepository
     */
    public EditorialRepository EditorialServiceImpl.getEditorialRepository() {
        return editorialRepository;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param editorialRepository
     */
    public void EditorialServiceImpl.setEditorialRepository(EditorialRepository editorialRepository) {
        this.editorialRepository = editorialRepository;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @return BookService
     */
    public BookService EditorialServiceImpl.getBookService() {
        return bookService;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param bookService
     */
    public void EditorialServiceImpl.setBookService(BookService bookService) {
        this.bookService = bookService;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param editorial
     * @param booksToAdd
     * @return Editorial
     */
    @Transactional
    public Editorial EditorialServiceImpl.addToBooks(Editorial editorial, Iterable<Long> booksToAdd) {
        List<Book> books = getBookService().findAll(booksToAdd);
        editorial.addToBooks(books);
        return getEditorialRepository().save(editorial);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param editorial
     * @param booksToRemove
     * @return Editorial
     */
    @Transactional
    public Editorial EditorialServiceImpl.removeFromBooks(Editorial editorial, Iterable<Long> booksToRemove) {
        List<Book> books = getBookService().findAll(booksToRemove);
        editorial.removeFromBooks(books);
        return getEditorialRepository().save(editorial);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param editorial
     */
    @Transactional
    public void EditorialServiceImpl.delete(Editorial editorial) {
        // Clear bidirectional one-to-many parent relationship with Book
        for (Book item : editorial.getBooks()) {
            item.setEditorial(null);
        }
        
        getEditorialRepository().delete(editorial);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param entities
     * @return List
     */
    @Transactional
    public List<Editorial> EditorialServiceImpl.save(Iterable<Editorial> entities) {
        return getEditorialRepository().save(entities);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param ids
     */
    @Transactional
    public void EditorialServiceImpl.delete(Iterable<Long> ids) {
        List<Editorial> toDelete = getEditorialRepository().findAll(ids);
        getEditorialRepository().deleteInBatch(toDelete);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param entity
     * @return Editorial
     */
    @Transactional
    public Editorial EditorialServiceImpl.save(Editorial entity) {
        return getEditorialRepository().save(entity);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param id
     * @return Editorial
     */
    public Editorial EditorialServiceImpl.findOne(Long id) {
        return getEditorialRepository().findOne(id);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param id
     * @return Editorial
     */
    public Editorial EditorialServiceImpl.findOneForUpdate(Long id) {
        return getEditorialRepository().findOneDetached(id);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param ids
     * @return List
     */
    public List<Editorial> EditorialServiceImpl.findAll(Iterable<Long> ids) {
        return getEditorialRepository().findAll(ids);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @return List
     */
    public List<Editorial> EditorialServiceImpl.findAll() {
        return getEditorialRepository().findAll();
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @return Long
     */
    public long EditorialServiceImpl.count() {
        return getEditorialRepository().count();
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param globalSearch
     * @param pageable
     * @return Page
     */
    public Page<Editorial> EditorialServiceImpl.findAll(GlobalSearch globalSearch, Pageable pageable) {
        return getEditorialRepository().findAll(globalSearch, pageable);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @return Class
     */
    public Class<Editorial> EditorialServiceImpl.getEntityType() {
        return Editorial.class;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @return Class
     */
    public Class<Long> EditorialServiceImpl.getIdType() {
        return Long.class;
    }
    
}
